---
services:
  ble_presence_agent:
    build:
      context: ./ble_presence_agent
      args:
        USER_ID: "${UID}"
        GROUP_ID: "${GID}"
    container_name: ble_presence_agent
    user: "${UID}:${GID}"
    volumes:
      - ./data:/app/data:rw
      - ./ble_presence_agent:/app
    env_file:
      - ./.env
    networks:
      - ai_network

  behavior_agent:
    build:
      context: ./behavior_agent
      args:
        USER_ID: "${UID}"
        GROUP_ID: "${GID}"
    container_name: behavior_agent
    user: "${UID}:${GID}"
    volumes:
      - ./data:/app/data:rw
      - ./behavior_agent:/app
      - ./common:/app/common
    env_file:
      - ./.env
    restart: unless-stopped
    networks:
      - ai_network

  ai_agent:
    build:
      context: ./ai_agent
      args:
        USER_ID: "${UID}"
        GROUP_ID: "${GID}"
    container_name: ai_agent_container
    user: "${UID}:${GID}"
    restart: unless-stopped
    environment:
      - HA_LONG_LIVED_ACCESS_TOKEN=${HA_LONG_LIVED_ACCESS_TOKEN}
      - HOME_ASSISTANT_WS_URL=${HOME_ASSISTANT_WS_URL}
      - HOME_ASSISTANT_WSS_URL=${HOME_ASSISTANT_WSS_URL}
      - HOME_ASSISTANT_API_URL=${HOME_ASSISTANT_API_URL}
      - HOME_ASSISTANT_CLOUD_API_URL=${HOME_ASSISTANT_CLOUD_API_URL}
      - PYTHONPATH=/app
    volumes:
      - ./data:/app/data:rw
      - ./ai_agent:/app
      - ./src/models:/app/src/models:ro
    networks:
      - ai_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    ports:
      - "8000:8000"

networks:
  ai_network:
    driver: bridge

volumes:
  data:
    driver: local
